InStyle — Подключение ESP32 к контактору и настройка пульта объекта
===================================================================

1. Прошивка контроллера
-----------------------
- Откройте `esp32_firmware.ino` в Arduino IDE 1.8+ или Arduino IDE 2.
- В меню **Инструменты → Плата** выберите «ESP32 Dev Module» или фактическую модель вашей платы.
- Установите скорость порта 115200 и подключите плату по USB.
- Загрузите скетч на ESP32. После первой прошивки устройство сохранит конфигурацию во внутренней памяти.

2. Схема подключения контактора
-------------------------------
- Используйте выходной пин, заданный в прошивке (`RELAY_PIN`, по умолчанию GPIO23) и общий GND ESP32.
- Подключите модуль реле/контактора (5 В или 12 В) согласно его инструкции:
  * **IN** (управляющий вход) → GPIO23 ESP32 через уровень согласования, если требуется.
  * **GND** → GND ESP32.
  * **VCC** → 5 В от стабилизированного источника (рекомендуется отдельный БП).
- Контакты силовой части контактора:
  * Фаза сети → общий контакт **COM** реле.
  * Нагрузка (освещение) → нормально-разомкнутый контакт **NO**.
  * Нейтраль ведите напрямую на нагрузку.
- Если реле работает в инверсной логике, поменяйте `RELAY_ACTIVE_HIGH` на `false` и перезалейте прошивку.

3. Первичная настройка ESP32
---------------------------
- После прошивки контроллер поднимет точку доступа `SRC-Link` (пароль `12345678`).
- Подключитесь к этой сети — устройство автоматически откроет окно конфигурации (каптив-портал). Если страница не появилась, перейдите на `http://192.168.4.1` вручную.
- На странице входа авторизуйтесь с паролем `1234`, выберите Wi‑Fi сеть объекта и введите пароль (от 8 символов).
- Нажмите «Сохранить». Плата перезагрузится, подключится к выбранной сети и будет доступна по `http://object.local` (mDNS).
- Панель управления в браузере использует тонкие разделители и квадратный ползунок: при переключении бегунок смещается вправо/влево без всплывающих уведомлений.
- Во время подключения встроенный светодиод мигает быстро, а после успешного выхода в сеть переходит на спокойный режим. На главной странице и в разделе Wi‑Fi теперь видно к какой сети подключена плата, уровень сигнала и причина возможной ошибки (например «Неверный пароль» или «Сеть не найдена»).

4. Привязка к Telegram-боту
---------------------------
- После первого запуска бот автоматически создаст `data/object_control/device.json`. Укажите в нём фактический адрес устройства, например:
  ```json
  {
    "endpoint": "http://192.168.1.45/api/state",
    "timeout": 7
  }
  ```
- Для возврата к заводским настройкам зажмите кнопку, подключённую к `HOLD_BUTTON_PIN`, примерно на 4 секунды. Когда статусный светодиод начнёт мигать, нажмите любую из кнопок (HOLD или CONFIRM) ещё раз — устройство сбросит Wi‑Fi и пароли к значениям по умолчанию (`SRC-Link` / `12345678` и пароль входа `1234`).
- При переключении кнопки «Пульт объекта» в боте Python отправит POST-запрос на `/api/state` ESP32 и обновит состояние.
  Формат полезной нагрузки:
  ```json
  {
    "state": "on" | "off",
    "actor_name": "Имя пользователя",
    "actor_id": 123456789,
    "source": "telegram"
  }
  ```
  Прошивка автоматически фиксирует ID вместе с именем в истории, поэтому устройство всегда знает, кто выполнил переключение.

5. Проверка и эксплуатация
--------------------------
- Откройте главное меню бота — в блоке статуса появится строка «Свет: …».
- Нажмите «Пульт объекта» → «Включить/Выключить». Свет переключится без дополнительных сообщений в чате, а всем пользователям придёт уведомление.
- История переключений хранится в `data/object_control/state.json`. Файл переживает перезапуск бота.
- Если контроллер недоступен, бот покажет предупреждение и не изменит сохранённое состояние.

6. Безопасность и рекомендации
------------------------------
- Используйте отдельный стабилизированный источник питания для ESP32 и реле.
- Для силовой части применяйте контактор, рассчитанный на ток нагрузки, с дополнительным RC-снуббером при необходимости.
- Ограничьте доступ к локальной сети или настройте отдельный VLAN для оборудования.
- Регулярно обновляйте прошивку и делайте резервную копию файлов `device.json` и `state.json`.
